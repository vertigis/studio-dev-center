"use strict";(globalThis.webpackChunkvertigis_studio_dev_center=globalThis.webpackChunkvertigis_studio_dev_center||[]).push([[4292],{2204:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=i(7624),r=i(2172),o=i(1268),a=i(5388);const s={title:"Workflow Activity Reference",sidebar_label:"Activity Reference",description:"VertiGIS Studio Workflow - Reference for workflow activities for VertiGIS Studio Mobile"},c=void 0,l={id:"workflow/sdk-mobile-activity-reference",title:"Workflow Activity Reference",description:"VertiGIS Studio Workflow - Reference for workflow activities for VertiGIS Studio Mobile",source:"@site/docs/workflow/sdk-mobile-activity-reference.mdx",sourceDirName:"workflow",slug:"/workflow/sdk-mobile-activity-reference",permalink:"/docs/workflow/sdk-mobile-activity-reference",draft:!1,unlisted:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/workflow/sdk-mobile-activity-reference.mdx",tags:[],version:"current",frontMatter:{title:"Workflow Activity Reference",sidebar_label:"Activity Reference",description:"VertiGIS Studio Workflow - Reference for workflow activities for VertiGIS Studio Mobile"},sidebar:"workflow",previous:{title:"Create an Activity",permalink:"/docs/workflow/sdk-mobile-create-activity"},next:{title:"Form Element Reference",permalink:"/docs/workflow/sdk-mobile-form-reference"}},u={},d=[{value:"Registering Activities",id:"registering-activities",level:2},{value:"Access VertiGIS Studio Mobile Functionality",id:"access-vertigis-studio-mobile-functionality",level:2},{value:"Access the Application Map",id:"access-the-application-map",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["In the VertiGIS Studio Workflow .NET SDK, activities are represented as simple classes with an ",(0,n.jsx)(t.code,{children:"Execute"})," method."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["Use a unique prefix on the ",(0,n.jsx)(t.code,{children:"Action"})," property to avoid it conflicting with someone else's custom activities."]})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",children:'[assembly: Export(typeof(CustomActivity))]\nnamespace App1.Workflow\n{\n    public class CustomActivity : IActivityHandler\n    {\n        public static string Action { get; } = "uuid:<uuid>::CustomActivity";\n\n        public Task<IDictionary<string, object>> Execute(IDictionary<string, object> inputs, IActivityContext context)\n        {\n            return Task.FromResult((IDictionary<string, object>)new Dictionary<string, object>(){\n                ["result"] = "value"\n            });\n        }\n    }\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"registering-activities",children:"Registering Activities"}),"\n",(0,n.jsxs)(t.p,{children:["Every VertiGIS Studio Mobile application that implements custom workflow activities needs to implement an ",(0,n.jsx)(t.code,{children:"IActivityHandlerFactory"}),". The ",(0,n.jsx)(t.code,{children:"IActivityHandlerFactory"})," is responsible for registering the custom activities with VertiGIS Studio Mobile so they can be created by VertiGIS Studio Workflow at runtime."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"ActivityLoader"})," registers custom activities in its constructor. Only one instance of the loader is required per VertiGIS Studio Mobile Application, as it can register multiple activities."]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["Two key components of this snippet are the ",(0,n.jsx)(t.code,{children:"[assembly: Export(...)]"})," tag and the class extension ",(0,n.jsx)(t.code,{children:"ActivityLoader : IActivityHandlerFactory"}),". These two pieces register the ",(0,n.jsx)(t.code,{children:"ActivityLoader"})," with VertiGIS Studio Mobile and cause it to be initialized on startup."]})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",metastring:'title="App1/App1/ActivityLoader.cs"',children:'using System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing VertiGIS.Mobile.Composition;\nusing VertiGIS.Workflow.Runtime;\nusing VertiGIS.Workflow.Runtime.Definition;\nusing VertiGIS.Workflow.Runtime.Execution;\nusing App1.Workflow;\n\n[assembly: Export(typeof(ActivityLoader), SingleInstance = true, AsImplementedInterfaces = true)]\nnamespace App1.Workflow\n{\n    public class ActivityLoader : IActivityHandlerFactory\n    {\n        /// <summary>\n        /// Gets a mapping of action names to implementations of <see cref="IActivityHandler"/>s.\n        /// </summary>\n        private Dictionary<string, Func<IActivityHandler>> RegisteredActivities { get; } = new Dictionary<string, Func<IActivityHandler>>();\n\n        public ActivityLoader(Func<CustomActivity> customActivityFactory)\n        {\n            RegisteredActivities[CustomActivity.Action] = customActivityFactory;\n        }\n\n        /// <summary>\n        /// Creates an <see cref="IActivityHandler"/>.\n        /// </summary>\n        /// <param name="action">The name of the action to create.</param>\n        /// <param name="token">The cancellation token.</param>\n        /// <param name="inspector">The <see cref="ProgramInspector"/> for the program.</param>\n        /// <returns>The activity handler for the given action.</returns>\n        public Task<IActivityHandler> Create(string action, CancellationToken token, ProgramInspector inspector = null)\n        {\n            if (action == null || token.IsCancellationRequested)\n            {\n                return Task.FromResult<IActivityHandler>(null);\n            }\n\n            if (RegisteredActivities.TryGetValue(action, out Func<IActivityHandler> handlerType))\n            {\n                return Task.FromResult(handlerType());\n            }\n            else\n            {\n                return Task.FromResult<IActivityHandler>(null);\n            }\n        }\n    }\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"access-vertigis-studio-mobile-functionality",children:"Access VertiGIS Studio Mobile Functionality"}),"\n",(0,n.jsxs)(t.p,{children:["You can access VertiGIS Studio Mobile functionality in custom workflow activities by using the built-in ",(0,n.jsx)(t.a,{href:"/docs/mobile/sdk-dependency-injection",children:"dependency injection pattern"})," to inject shared VertiGIS Studio Mobile ",(0,n.jsx)(t.a,{href:"/docs/mobile/sdk-services-overview",children:"services"})," such as the ",(0,n.jsx)(t.code,{children:"UIOperations"})," service."]}),"\n",(0,n.jsx)(t.p,{children:"First, add the class you want to inject to the constructor of the custom activity."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",children:'// highlight-next-line\n[assembly: Export(typeof(DisplayGeocortexMobileAlert))]\nnamespace App1.Workflow\n{\n    public class DisplayGeocortexMobileAlert : IActivityHandler\n    {\n        private UIOperations _uiOperations;\n\n        public static string Action { get; } = "uuid:<uuid>::DisplayGeocortexMobileAlert";\n\n        // highlight-next-line\n        public DisplayGeocortexMobileAlert(UIOperations uiOperations)\n        {\n            _uiOperations = uiOperations;\n        }\n\n        public Task<IDictionary<string, object>> Execute(IDictionary<string, object> inputs, IActivityContext context)\n        {\n            return Task.FromResult((IDictionary<string, object>)new Dictionary<string, object>());\n        }\n    }\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Next, ",(0,n.jsx)(t.a,{href:"/docs/mobile/sdk-dependency-injection",children:"inject the activity"})," into the ",(0,n.jsx)(t.code,{children:"IActivityHandlerFactory"})," for the application."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Since the ",(0,n.jsx)(t.code,{children:"DisplayGeocortexMobileAlert"})," activity is injected into the ",(0,n.jsx)(t.code,{children:"IActivityHandlerFactory"})," with Autofac, its dependency on the ",(0,n.jsx)(t.code,{children:"UIOperations"})," class will be be resolved by Autofac."]})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",children:"public class ActivityLoader : IActivityHandlerFactory\n{\n    ...\n\n    // highlight-next-line\n    public ActivityLoader(Func<DisplayGeocortexMobileAlert> displayGeocortexMobileAlertFactory)\n    {\n        RegisteredActivities[DisplayGeocortexMobileAlert.Action] = displayGeocortexMobileAlertFactory;\n    }\n    ...\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"Finally, you can implement your activity using the referenced VertiGIS Studio Mobile class."}),"\n",(0,n.jsxs)(o.c,{defaultValue:"custom-activity",values:[{label:"Custom Activity",value:"custom-activity"},{label:"IActivityHandlerFactory",value:"activity-loader"}],children:[(0,n.jsx)(a.c,{value:"custom-activity",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",children:'using App1.Workflow;\nusing VertiGIS.Mobile.Composition;\nusing VertiGIS.Mobile.Infrastructure.Messaging;\nusing VertiGIS.Workflow.Runtime;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\n\n[assembly: Export(typeof(DisplayGeocortexMobileAlert))]\nnamespace App1.Workflow\n{\n    public class DisplayGeocortexMobileAlert : IActivityHandler\n    {\n        private UIOperations _uiOperations;\n\n        public static string Action { get; } = "uuid:<uuid>::DisplayGeocortexMobileAlert";\n\n        public DisplayGeocortexMobileAlert(UIOperations uiOperations)\n        {\n            _uiOperations = uiOperations;\n        }\n\n        public async Task<IDictionary<string, object>> Execute(IDictionary<string, object> inputs, IActivityContext context)\n        {\n            await _uiOperations.Alert.ExecuteAsync(new UIAlertArgs() { Title = "It\'s dangerous to go alone.", Message = "Take this!", ButtonText = "*take sword*" });\n\n            return new Dictionary<string, object>();\n        }\n    }\n}\n'})})}),(0,n.jsx)(a.c,{value:"activity-loader",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",children:'using App1.Samples.Workflow.CustomActivity;\nusing System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing VertiGIS.Mobile.Composition;\nusing VertiGIS.Workflow.Runtime;\nusing VertiGIS.Workflow.Runtime.Definition;\nusing VertiGIS.Workflow.Runtime.Execution;\nusing App1.Workflow;\n\n[assembly: Export(typeof(ActivityLoader), SingleInstance = true, AsImplementedInterfaces = true)]\nnamespace App1.Samples.Workflow.CustomActivity\n{\n    public class ActivityLoader : IActivityHandlerFactory\n    {\n        /// <summary>\n        /// Gets a mapping of action names to implementations of <see cref="IActivityHandler"/>s.\n        /// </summary>\n        private Dictionary<string, Func<IActivityHandler>> RegisteredActivities { get; } = new Dictionary<string, Func<IActivityHandler>>();\n\n        public ActivityLoader(Func<DisplayGeocortexMobileAlert> displayGeocortexMobileAlertFactory)\n        {\n            RegisteredActivities[DisplayGeocortexMobileAlert.Action] = displayGeocortexMobileAlertFactory;\n        }\n\n        /// <summary>\n        /// Creates an <see cref="IActivityHandler"/>.\n        /// </summary>\n        /// <param name="action">The name of the action to create.</param>\n        /// <param name="token">The cancellation token.</param>\n        /// <param name="inspector">The <see cref="ProgramInspector"/> for the program.</param>\n        /// <returns>The activity handler for the given action.</returns>\n        public Task<IActivityHandler> Create(string action, CancellationToken token, ProgramInspector inspector = null)\n        {\n            if (action == null || token.IsCancellationRequested)\n            {\n                return Task.FromResult<IActivityHandler>(null);\n            }\n\n            if (RegisteredActivities.TryGetValue(action, out Func<IActivityHandler> handlerType))\n            {\n                return Task.FromResult(handlerType());\n            }\n            else\n            {\n                return Task.FromResult<IActivityHandler>(null);\n            }\n        }\n    }\n}\n'})})})]}),"\n",(0,n.jsx)(t.h2,{id:"access-the-application-map",children:"Access the Application Map"}),"\n",(0,n.jsxs)(t.p,{children:["The map of the host application can be accessed through ",(0,n.jsx)(t.a,{href:"/docs/mobile/sdk-dependency-injection",children:"dependency injection "}),". The ",(0,n.jsx)(t.code,{children:"MapProviderBase"})," class which exposes the ",(0,n.jsx)(t.a,{href:"https://developers.arcgis.com/net/latest/uwp/api-reference/html/T_Esri_ArcGISRuntime_Mapping_Map.htm",children:"Map"})," and ",(0,n.jsx)(t.a,{href:"https://developers.arcgis.com/net/latest/uwp/api-reference/html/T_Esri_ArcGISRuntime_UI_Controls_MapView.htm",children:"MapView"})," can be injected with the ",(0,n.jsx)(t.code,{children:"ProviderFactoryAttribute"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["For a complete example, check out the ",(0,n.jsx)(t.a,{href:"/docs/workflow/tutorial-mobile-show-map-callout",children:"Show Callout on Map"})," custom activity tutorial."]})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",children:'[assembly: Export(typeof(CustomActivity))]\nnamespace App1.Workflow\n{\n    public class CustomActivity : IActivityHandler\n    {\n        // highlight-start\n        [ProviderFactoryAttribute(typeof(MapProviderBase))]\n        public Func<MapProviderBase> MapProviderFactory { get; set; }\n        // highlight-end\n\n        public static string Action { get; } = "uuid:<uuid>::CustomActivity";\n\n        public Task<IDictionary<string, object>> Execute(IDictionary<string, object> inputs, IActivityContext context)\n        {\n            // highlight-start\n            var mapProvider = MapProviderFactory();\n            await mapProvider.Load();\n            var map = mapProvider.Map;\n            var mapView = (MapView)((WorkflowMapProvider)mapProvider).View;\n            // highlight-end\n\n            // ...\n\n            return new Dictionary<string, object>();\n        }\n    }\n}\n'})})]})}function m(e={}){const{wrapper:t}={...(0,r.M)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},5388:(e,t,i)=>{i.d(t,{c:()=>a});i(1504);var n=i(4064);const r={tabItem:"tabItem_Ymn6"};var o=i(7624);function a({children:e,hidden:t,className:i}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.c)(r.tabItem,i),hidden:t,children:e})}},1268:(e,t,i)=>{i.d(t,{c:()=>I});var n=i(1504),r=i(4064),o=i(3943),a=i(5592),s=i(5288),c=i(632),l=i(7128),u=i(1148);function d(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:i}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return d(e).map((({props:{value:e,label:t,attributes:i,default:n}})=>({value:e,label:t,attributes:i,default:n})))}(i);return function(e){const t=(0,l.w)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,i])}function m({value:e,tabValues:t}){return t.some((t=>t.value===e))}function h({queryString:e=!1,groupId:t}){const i=(0,a.Uz)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c._M)(r),(0,n.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(i.location.search);t.set(r,e),i.replace({...i.location,search:t.toString()})}),[r,i])]}function y(e){const{defaultValue:t,queryString:i=!1,groupId:r}=e,o=p(e),[a,c]=(0,n.useState)((()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:o}))),[l,d]=h({queryString:i,groupId:r}),[y,v]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,r]=(0,u.IN)(t);return[i,(0,n.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:r}),f=(()=>{const e=l??y;return m({value:e,tabValues:o})?e:null})();(0,s.c)((()=>{f&&c(f)}),[f]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),v(e)}),[d,v,o]),tabValues:o}}var v=i(3664);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=i(7624);function g({className:e,block:t,selectedValue:i,selectValue:n,tabValues:a}){const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.MV)(),l=e=>{const t=e.currentTarget,r=s.indexOf(t),o=a[r].value;o!==i&&(c(t),n(o))},u=e=>{let t=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const i=s.indexOf(e.currentTarget)+1;t=s[i]??s[0];break}case"ArrowLeft":{const i=s.indexOf(e.currentTarget)-1;t=s[i]??s[s.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.c)("tabs",{"tabs--block":t},e),children:a.map((({value:e,label:t,attributes:n})=>(0,b.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>s.push(e),onKeyDown:u,onClick:l,...n,className:(0,r.c)("tabs__item",f.tabItem,n?.className,{"tabs__item--active":i===e}),children:t??e},e)))})}function A({lazy:e,children:t,selectedValue:i}){const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===i));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function x(e){const t=y(e);return(0,b.jsxs)("div",{className:(0,r.c)("tabs-container",f.tabList),children:[(0,b.jsx)(g,{...e,...t}),(0,b.jsx)(A,{...e,...t})]})}function I(e){const t=(0,v.c)();return(0,b.jsx)(x,{...e,children:d(e.children)},String(t))}},2172:(e,t,i)=>{i.d(t,{I:()=>s,M:()=>a});var n=i(1504);const r={},o=n.createContext(r);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);