"use strict";(globalThis.webpackChunkvertigis_studio_dev_center=globalThis.webpackChunkvertigis_studio_dev_center||[]).push([[3730],{8080:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"workflow/sdk-desktop-wrapping","title":"Wrapping activity inputs and outputs","description":"VertiGIS Studio Workflow - Overview of extending workflow for VertiGIS Studio Desktop","source":"@site/docs/workflow/sdk-desktop-wrapping.mdx","sourceDirName":"workflow","slug":"/workflow/sdk-desktop-wrapping","permalink":"/docs/workflow/sdk-desktop-wrapping","draft":false,"unlisted":false,"editUrl":"https://github.com/vertigis/studio-dev-center/edit/master/docs/workflow/sdk-desktop-wrapping.mdx","tags":[],"version":"current","frontMatter":{"title":"Wrapping activity inputs and outputs","sidebar_label":"Input and output wrapping","description":"VertiGIS Studio Workflow - Overview of extending workflow for VertiGIS Studio Desktop"},"sidebar":"workflow","previous":{"title":"Create an Activity","permalink":"/docs/workflow/sdk-desktop-create-activity"},"next":{"title":"SDK Overview","permalink":"/docs/workflow/sdk-server-overview"}}');var i=n(4848),o=n(8453);const s={title:"Wrapping activity inputs and outputs",sidebar_label:"Input and output wrapping",description:"VertiGIS Studio Workflow - Overview of extending workflow for VertiGIS Studio Desktop"},a=void 0,p={},c=[{value:"Unwrapping inputs",id:"unwrapping-inputs",level:3}];function u(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The implementation of the Workflow Runtime uses mechanisms to internally stay agnostic of used APIs. To achieve this, all ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/built-in-types",children:"non-builtin types"})," in the output of an activity should get wrapped in a ",(0,i.jsx)(t.code,{children:"WrapperBase"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cs",children:'public Task<IDictionary<string, object?>> Execute(IDictionary<string, object?> inputs, IActivityContext context)\n{\n    // activity work, e.g. creating a feature\n\n    IDictionary<string, object?> outputs = new Dictionary<string, object?>();\n\n    // highlight-start\n    outputs.Add("feature", new CustomActivityWrapper(createdFeature));\n    // highlight-end\n\n    return Task.FromResult(outputs);\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["where an implementation of a WrapperBase at least offers a ",(0,i.jsx)(t.code,{children:"Unwrap"})," method:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cs",children:"private class CustomActivityWrapper : WrapperBase\n{\n    //internals of the wrapper\n\n    public override object Unwrap()\n    {\n        return _actualObject;\n    }\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"unwrapping-inputs",children:"Unwrapping inputs"}),"\n",(0,i.jsxs)(t.p,{children:["Thus all inputs in an activity should get unwrapped before working with it. On Studio Desktop you may cast the input either to ",(0,i.jsx)(t.code,{children:"WrapperBase"})," or ",(0,i.jsx)(t.code,{children:"IServiceProvider"})," - both methods are equivalent:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cs",children:'public Task<IDictionary<string, object?>> Execute(IDictionary<string, object?> inputs, IActivityContext context)\n{\n   // Variant 1 IServiceProvider:\n   IServiceProvider provider = inputs["feature"] as IServiceProvider;\n   Row actualObject = (Row)provider.GetService(typeof(Row));\n\n   // Variant 2 WrapperBase:\n   WrapperBase wrapper = inputs["feature"] as WrapperBase;\n   Row actualObject2 = (Row)wrapper.Unwrap();\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(6540);const i={},o=r.createContext(i);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);