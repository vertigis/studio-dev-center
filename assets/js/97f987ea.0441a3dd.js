"use strict";(globalThis.webpackChunkvertigis_studio_dev_center=globalThis.webpackChunkvertigis_studio_dev_center||[]).push([[6821],{887:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var n=o(4848),r=o(8453),i=o(8774);const s={title:"New Workflow Form Element API",author:"Ian Schmitz",authorTitle:"Software Architect",authorURL:"https://github.com/ianschmitz",authorImageURL:"https://github.com/ianschmitz.png",tags:["workflow"]},c=void 0,l={permalink:"/blog/2021/03/22/new-workflow-element-api",source:"@site/blog/2021-03-22-new-workflow-element-api.mdx",title:"New Workflow Form Element API",description:"Workflow 5.21 includes a new TypeScript form element API that you can use for building custom form elements using the VertiGIS Studio Workflow TypeScript SDK. The existing patterns and APIs you've been using for years to build custom form elements will continue to work, but we encourage you to try the new API when building new form elements.",date:"2021-03-22T00:00:00.000Z",tags:[{label:"workflow",permalink:"/blog/tags/workflow"}],readingTime:9.06,hasTruncateMarker:!0,authors:[{name:"Ian Schmitz",title:"Software Architect",url:"https://github.com/ianschmitz",imageURL:"https://github.com/ianschmitz.png"}],frontMatter:{title:"New Workflow Form Element API",author:"Ian Schmitz",authorTitle:"Software Architect",authorURL:"https://github.com/ianschmitz",authorImageURL:"https://github.com/ianschmitz.png",tags:["workflow"]},unlisted:!1,prevItem:{title:"Mobile Generic Event Listener",permalink:"/blog/2023/03/01/mobile-generic-event-listener"}},a={authorsImageUrls:[void 0]},u=[];function m(e){const t={code:"code",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(t.p,{children:["Workflow ",(0,n.jsx)(t.code,{children:"5.21"})," includes a new TypeScript form element API that you can use for building custom form elements using the ",(0,n.jsx)(i.A,{to:"/docs/workflow/sdk-web-overview",children:"VertiGIS Studio Workflow TypeScript SDK"}),". The existing patterns and APIs you've been using for years to build custom form elements will continue to work, but we encourage you to try the new API when building new form elements."]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>c});var n=o(6540);const r={},i=n.createContext(r);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);